Rfx Fruit Encoding:

24 bits encoded 

bit 0-18: value (0-524287) (scaled by 100, i.e. a value of 4545 means 45.45
bit 19: sign bit (0 = +, 1 = -) 
Value range: -524287-524287
bit 20-23: quantity type
0x00: temperature (C)
0x01: humidity (%)
0x02: (air) pressure (hPa)
0x03: luminance (lux)
0x04: loudness (dB)
0x05: current (A)
0x06: voltage (V)
0x07: rfu
0x08: rfu
0x09: rfu
0x0A: rfu
0x0B: rfu
0x0C: rfu
0x0D: rfu
0x0E: rfu
0x0F: rfu

Encode (to single int)
----------------------
value (32 bit signed integer)
set sign bit (if needed): value |= 0x80000
set quantity type: value |= quantity_type << 20;

Encode (to separate byte ARRAY (MSB B1 LSB) )
-------------------------
value (32 bit signed integer)
set sign bit (if needed): value |= 0x80000
set quantity type: value |= quantity_type << 20;
byte[0] = (rfxm_value >> 16) & 0xff;
byte[1] = (rfxm_value >> 8) & 0xff;
byte[2] = (rfxm_value & 0xff);


Decode (from single int)
------------------------
received_value (unsigned 32 bit)
signbit = value & 0x80000 != 0;
quantity_type = received_value >> 20;
value = +/-(received_value & 0x7FFFF)

Decode (from separate byte ARRAY) ( MSB (0) B1 (1) LSB (2)
----------------------------------------------------------
input (byte[3])
received_value = (input[0] << 16) + (uint)(input[1] << 8) + (uint)input[2];
signbit = value & 0x80000 != 0;
quantity_type = received_value >> 20;
value = +/-(received_value & 0x7FFFF) (unscaled)

 
